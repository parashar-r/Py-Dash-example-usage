# -*- coding: utf-8 -*-
"""Untitled32.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Bugn7O41wF9un2Dc0HLDEOBBdXBq3Wh8
"""

!pip install dash plotly
!pip install dash-html-components
!pip install dash-core-components

import dash
from dash import dcc, html
from dash.dependencies import Input, Output
import plotly.graph_objs as go

# Sample data
categories = ['A', 'B', 'C', 'D']
values = [4, 7, 1, 8]
months = ['January', 'February', 'March', 'April']
sales = [150, 200, 180, 220]
temperatures = [22, 21, 19, 24]
humidity = [60, 62, 65, 55]

# Create a Dash app
app = dash.Dash(__name__)

app.layout = html.Div([
    html.H1("Plotly Dash Examples"),

    # Dropdown to select chart types(Note that this can be done for different chart types)
    dcc.Dropdown(
        id='chart-type',
        options=[
            {'label': 'Bar Chart', 'value': 'bar'},
            {'label': 'Stacked Bar Chart', 'value': 'stacked_bar'},
            {'label': 'Grouped Bar Chart', 'value': 'grouped_bar'},
            {'label': 'Line Chart', 'value': 'line'},
            {'label': 'Multi-Line Chart', 'value': 'multi_line'},
            {'label': 'Scatter Plot', 'value': 'scatter'},
            {'label': 'Bubble Chart', 'value': 'bubble'},
        ],
        value='bar'
    ),

# display the selected chart(Note that this can be done for different chart types)
    dcc.Graph(id='chart')
])

@app.callback(
    Output('chart', 'figure'),
    [Input('chart-type', 'value')]
)
def update_chart(chart_type):
    if chart_type == 'bar':
        fig = go.Figure(data=[
            go.Bar(x=categories, y=values)
        ])
    elif chart_type == 'stacked_bar':
        fig = go.Figure(data=[
            go.Bar(x=categories, y=[4, 7, 1, 8], name='2019'),
            go.Bar(x=categories, y=[5, 3, 8, 6], name='2020')
        ])
        fig.update_layout(barmode='stack')
    elif chart_type == 'grouped_bar':
        fig = go.Figure(data=[
            go.Bar(x=categories, y=[4, 7, 1, 8], name='2019'),
            go.Bar(x=categories, y=[5, 3, 8, 6], name='2020')
        ])
        fig.update_layout(barmode='group')
    elif chart_type == 'line':
        fig = go.Figure(data=[
            go.Scatter(x=months, y=sales, mode='lines')
        ])
    elif chart_type == 'multi_line':
        fig = go.Figure(data=[
            go.Scatter(x=months, y=sales, mode='lines', name='Sales'),
            go.Scatter(x=months, y=temperatures, mode='lines', name='Temperature')
        ])
    elif chart_type == 'scatter':
        fig = go.Figure(data=[
            go.Scatter(x=temperatures, y=humidity, mode='markers')
        ])
    elif chart_type == 'bubble':
        fig = go.Figure(data=[
            go.Scatter(
                x=temperatures, y=humidity,
                mode='markers',
                marker=dict(size=[10, 20, 30, 40])
            )
        ])
    return fig

if __name__ == '__main__':
    app.run_server(debug=True)

!pip install Tkinter

# Combines Modules and sets up the GUI for interpreter with graphs
from Tkinter import *
from Graph import Graph_class
from interpreter import Interpreter
import ScrolledText
from multiListBox import MultiListbox as multiListbox

